# ========================================
# JustoAI V2 - Railway Backend Dockerfile
# ========================================
# This Dockerfile is optimized for running the backend API + workers on Railway
# Frontend will be deployed separately on Vercel

FROM node:20-alpine AS base

# Install dependencies only when needed
FROM base AS deps
RUN apk add --no-cache libc6-compat
WORKDIR /app

# Install dependencies
COPY package.json package-lock.json* ./
RUN npm install --legacy-peer-deps

# Rebuild the source code only when needed
FROM base AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Set build-time environment variables
ENV NEXT_TELEMETRY_DISABLED=1
ENV SKIP_ENV_VALIDATION=1

# Add minimal build-time env vars (valores dummy para build)
# Valores reais serão injetados em runtime pelo Railway
ENV NEXT_PUBLIC_SUPABASE_URL=https://placeholder.supabase.co
ENV NEXT_PUBLIC_SUPABASE_ANON_KEY=placeholder-key-for-build-only
ENV NEXT_PUBLIC_API_URL=http://localhost:3000
ENV NEXT_PUBLIC_APP_URL=http://localhost:3000

# Generate Prisma Client
RUN npx prisma generate

# Build Next.js - agora deve completar com sucesso
RUN npm run build

# Production image, copy all files and run
FROM base AS runner
WORKDIR /app

ENV NODE_ENV production
ENV NEXT_TELEMETRY_DISABLED 1

# Create non-root user
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# Copy necessary files from standalone build
# Next.js standalone creates nested directory structure
COPY --from=builder /app/public ./public
COPY --from=builder /app/.next/standalone/justoai-v2/.next ./.next
COPY --from=builder /app/.next/static ./.next/static
COPY --from=builder /app/prisma ./prisma
COPY --from=builder /app/node_modules/.prisma ./node_modules/.prisma

# Copy package.json and server.js from standalone
COPY --from=builder /app/.next/standalone/justoai-v2/package.json ./package.json
COPY --from=builder /app/.next/standalone/justoai-v2/server.js ./server.js

# Copy node_modules from standalone (only production deps)
COPY --from=builder /app/.next/standalone/justoai-v2/node_modules ./node_modules

# NOTE: Deliberadamente NÃO copiando workers/scripts para reduzir uso de CPU
# Workers serão habilitados em service separado posteriormente se necessário
# COPY --from=builder /app/workers ./workers
# COPY --from=builder /app/scripts ./scripts

# Change ownership
RUN chown -R nextjs:nodejs /app

USER nextjs

# Expose port (Railway will use $PORT)
EXPOSE 3000

ENV PORT 3000
ENV HOSTNAME "0.0.0.0"

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
  CMD node -e "require('http').get('http://localhost:3000/api/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"

# Start server
CMD ["node", "server.js"]
