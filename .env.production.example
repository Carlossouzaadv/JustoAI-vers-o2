# ====================================================================
# JUSTOAI V2 - PRODUCTION ENVIRONMENT CONFIGURATION
# ====================================================================
# ⚠️  IMPORTANTE: Este é um template para configuração de PRODUÇÃO
# 1. Copie este arquivo para .env.production: cp .env.production.example .env.production
# 2. Preencha TODAS as variáveis com valores reais de produção
# 3. NUNCA commite arquivos .env com valores reais
# 4. Use valores diferentes de desenvolvimento para aumentar segurança
# ====================================================================

# --------------------------------------------------------------------
# APPLICATION CONFIGURATION
# --------------------------------------------------------------------
# CRITICAL: Must be 'production' for production environment
NODE_ENV=production

# URL pública da aplicação (seu domínio de produção)
NEXT_PUBLIC_APP_URL=https://app.justoai.com

# --------------------------------------------------------------------
# DATABASE CONFIGURATION (SUPABASE)
# --------------------------------------------------------------------
# ⚠️  CRITICAL: Use connection pooling URL for production
# Format: postgresql://postgres.[project-ref]:[password]@[host]:6543/postgres?pgbouncer=true
DATABASE_URL=postgresql://postgres.xxxxx:password@aws-0-us-east-1.pooler.supabase.com:6543/postgres?pgbouncer=true

# Direct connection for migrations (without pooling)
# Format: postgresql://postgres.[project-ref]:[password]@[host]:5432/postgres
DIRECT_URL=postgresql://postgres.xxxxx:password@aws-0-us-east-1.compute-1.amazonaws.com:5432/postgres

# --------------------------------------------------------------------
# SUPABASE CONFIGURATION
# --------------------------------------------------------------------
# URL do projeto Supabase (obtenha em https://app.supabase.com/project/[id]/settings/api)
NEXT_PUBLIC_SUPABASE_URL=https://xxxxx.supabase.co

# Chave anônima (pública) do Supabase - Seguro expor no frontend
NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...

# ⚠️  CRITICAL: Service role key - NUNCA exponha no frontend ou logs
# Tem permissões administrativas completas no banco
SUPABASE_SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...

# --------------------------------------------------------------------
# REDIS CONFIGURATION (UPSTASH RECOMMENDED FOR PRODUCTION)
# --------------------------------------------------------------------
# Upstash Redis URL (formato: redis://default:password@host:port)
# Obtenha em: https://console.upstash.com/
REDIS_HOST=us1-correct-mantis-12345.upstash.io
REDIS_PORT=6379
REDIS_PASSWORD=your-upstash-password-here

# Alternative: Redis Labs, AWS ElastiCache, etc.
# REDIS_URL=redis://default:password@host:port
# REDIS_TLS=true  # Use TLS for production

# --------------------------------------------------------------------
# BULL QUEUE CONFIGURATION
# --------------------------------------------------------------------
# Token seguro para acessar o painel Bull Board
# Gere com: openssl rand -hex 32
BULL_BOARD_ACCESS_TOKEN=your-secure-random-token-minimum-32-characters-here

# Habilitar estatísticas de sincronização
SAVE_SYNC_STATS=true

# --------------------------------------------------------------------
# AUTHENTICATION (NextAuth.js)
# --------------------------------------------------------------------
# URL da aplicação para NextAuth (mesmo que NEXT_PUBLIC_APP_URL)
NEXTAUTH_URL=https://app.justoai.com

# ⚠️  CRITICAL: Secret para assinar tokens JWT
# Gere com: openssl rand -base64 32
# DEVE SER DIFERENTE de desenvolvimento
NEXTAUTH_SECRET=your-super-secret-nextauth-secret-for-production-min-32-chars

# --------------------------------------------------------------------
# API KEYS - IA & SERVIÇOS EXTERNOS
# --------------------------------------------------------------------
# Google Gemini API Key (para análise de documentos com IA)
# Obtenha em: https://makersuite.google.com/app/apikey
# ⚠️  Crie chave separada para produção com quotas adequadas
GOOGLE_API_KEY=AIzaSy...your-production-google-api-key

# Anthropic Claude API Key (se usar Claude)
# Obtenha em: https://console.anthropic.com/
ANTHROPIC_API_KEY=sk-ant-api...your-production-anthropic-key

# --------------------------------------------------------------------
# JUDIT API CONFIGURATION
# --------------------------------------------------------------------
# ⚠️  CRITICAL: API Key da JUDIT (será fornecida na sexta-feira)
# Esta chave habilita monitoramento real de processos
JUDIT_API_KEY=your-judit-production-api-key-here

# URLs da API JUDIT (não alterar a menos que especificado)
JUDIT_REQUESTS_URL=https://requests.prod.judit.io
JUDIT_TRACKING_URL=https://tracking.prod.judit.io

# --------------------------------------------------------------------
# EMAIL CONFIGURATION (RESEND RECOMMENDED)
# --------------------------------------------------------------------
# Resend API Key (obtenha em: https://resend.com/api-keys)
# ⚠️  Use domínio verificado em produção
SMTP_HOST=smtp.resend.com
SMTP_PORT=465
SMTP_USER=resend
SMTP_PASSWORD=re_...your-resend-api-key

# Email que aparecerá como remetente (deve ser do domínio verificado)
FROM_EMAIL=noreply@justoai.com

# Alternative: SendGrid, Mailgun, AWS SES
# SMTP_HOST=smtp.sendgrid.net
# SMTP_PORT=587
# SMTP_USER=apikey
# SMTP_PASSWORD=SG.your-sendgrid-api-key

# --------------------------------------------------------------------
# MONITORING & OBSERVABILITY
# --------------------------------------------------------------------
# Log level para produção (recomendado: info ou warn)
LOG_LEVEL=info

# Sentry DSN (error tracking - opcional mas recomendado)
# Obtenha em: https://sentry.io/
SENTRY_DSN=https://xxxxx@o123456.ingest.sentry.io/123456
SENTRY_ENVIRONMENT=production
SENTRY_RELEASE=justoai-v2@1.0.0

# --------------------------------------------------------------------
# ALERTS CONFIGURATION
# --------------------------------------------------------------------
# Email alerts para erros críticos
ALERTS_EMAIL_ENABLED=true
ALERTS_EMAIL_FROM=alerts@justoai.com
ALERTS_EMAIL_TO=ops@justoai.com,admin@justoai.com

# Slack webhook para alertas em tempo real (opcional)
ALERTS_SLACK_ENABLED=true
ALERTS_SLACK_WEBHOOK_URL=https://hooks.slack.com/services/T00/B00/xxxx

# Webhook genérico para alertas (opcional)
ALERTS_WEBHOOK_ENABLED=false
ALERTS_WEBHOOK_URL=https://your-monitoring-service.com/api/alerts

# --------------------------------------------------------------------
# SECURITY & CORS CONFIGURATION
# --------------------------------------------------------------------
# ⚠️  CRITICAL: Liste APENAS origens permitidas em produção
# Separar por vírgula, SEM espaços
ALLOWED_ORIGINS=https://justoai.com,https://www.justoai.com,https://app.justoai.com

# Permitir credenciais em requisições CORS
CORS_CREDENTIALS=true

# Habilitar headers de segurança (HSTS, CSP, etc.)
SECURITY_HEADERS_ENABLED=true

# --------------------------------------------------------------------
# PROCESS MONITORING CONFIGURATION
# --------------------------------------------------------------------
# Intervalo de monitoramento de processos (em minutos)
# Produção recomendado: 60 (1 hora) para economizar custos API
PROCESS_MONITOR_INTERVAL_MINUTES=60

# Auto-iniciar monitoramento ao subir aplicação
PROCESS_MONITOR_AUTO_START=true

# Habilitar alertas por email
ALERT_EMAIL_ENABLED=true

# Habilitar alertas via webhook
ALERT_WEBHOOK_ENABLED=true

# --------------------------------------------------------------------
# FEATURE FLAGS
# --------------------------------------------------------------------
# Habilitar dashboard clássico
NEXT_PUBLIC_CLASSIC_DASHBOARD_ENABLED=true

# Habilitar funcionalidades Pro
NEXT_PUBLIC_PRO_FEATURES_ENABLED=true

# Habilitar monitoramento de processos
NEXT_PUBLIC_PROCESS_MONITORING_ENABLED=true

# Habilitar analytics/telemetria
NEXT_PUBLIC_ENABLE_ANALYTICS=true

# Modo debug no frontend (desabilitar em produção)
NEXT_PUBLIC_ENABLE_DEBUG=false

# Habilitar documentação Swagger (pode desabilitar em produção)
NEXT_PUBLIC_SWAGGER_ENABLED=false

# --------------------------------------------------------------------
# UPLOAD/STORAGE CONFIGURATION
# --------------------------------------------------------------------
# Tamanho máximo de upload em bytes (10MB padrão)
NEXT_PUBLIC_UPLOAD_MAX_SIZE=10485760

# Supabase Storage bucket name (se usar Supabase Storage)
# NEXT_PUBLIC_STORAGE_BUCKET=documents

# --------------------------------------------------------------------
# WORKERS CONFIGURATION
# --------------------------------------------------------------------
# Habilitar modo debug para workers (false em produção)
DEBUG=false

# Número máximo de workers concorrentes
WORKER_CONCURRENCY=5

# Timeout para jobs em ms (5 minutos padrão)
JOB_TIMEOUT=300000

# --------------------------------------------------------------------
# PAYMENT PROVIDERS (SE USAR)
# --------------------------------------------------------------------
# Stripe
# STRIPE_SECRET_KEY=sk_live_...
# STRIPE_WEBHOOK_SECRET=whsec_...
# NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=pk_live_...

# MercadoPago
# MERCADOPAGO_ACCESS_TOKEN=APP_USR-...
# MERCADOPAGO_WEBHOOK_SECRET=your-webhook-secret

# PagSeguro
# PAGSEGURO_EMAIL=your@email.com
# PAGSEGURO_TOKEN=your-production-token

# --------------------------------------------------------------------
# API CONFIGURATION
# --------------------------------------------------------------------
# URL base da API para documentação
NEXT_PUBLIC_API_URL=https://app.justoai.com

# Rate limiting (requisições por minuto por IP)
RATE_LIMIT_MAX=100
RATE_LIMIT_WINDOW_MS=60000

# --------------------------------------------------------------------
# JUSTOAI SPECIFIC
# --------------------------------------------------------------------
# Versão do JustoAI
JUSTOAI_VERSION=v2.1.0

# Build ID (será definido pelo CI/CD)
# BUILD_ID=
# COMMIT_SHA=
# DEPLOY_DATE=

# --------------------------------------------------------------------
# VERCEL SPECIFIC (Auto-populated by Vercel)
# --------------------------------------------------------------------
# VERCEL=1
# VERCEL_ENV=production
# VERCEL_URL=justoai-v2.vercel.app
# VERCEL_GIT_COMMIT_SHA=
# VERCEL_GIT_COMMIT_MESSAGE=
# VERCEL_GIT_COMMIT_AUTHOR_NAME=

# ====================================================================
# CHECKLIST DE PRODUÇÃO
# ====================================================================
# Antes de fazer deploy, verifique:
#
# ✅ Todas as variáveis críticas preenchidas
# ✅ JUDIT_API_KEY configurada (receberá na sexta-feira)
# ✅ Secrets diferentes de desenvolvimento
# ✅ NODE_ENV=production
# ✅ URLs de produção configuradas
# ✅ CORS configurado com origens corretas
# ✅ Redis/Upstash configurado
# ✅ Email (Resend) configurado com domínio verificado
# ✅ Sentry (ou similar) configurado para error tracking
# ✅ Alertas de email/Slack configurados
# ✅ Rate limiting configurado adequadamente
# ✅ Swagger disabled em produção (ou protegido)
# ✅ Debug disabled em produção
# ✅ Supabase RLS policies aplicadas
# ✅ Database migrations aplicadas
# ✅ Backups automáticos configurados
#
# ====================================================================
# IMPORTANTE: NUNCA COMMITE ESTE ARQUIVO COM VALORES REAIS
# ====================================================================
# Adicione .env.production ao .gitignore
# Use Vercel Environment Variables ou secrets manager
# Rotacione secrets regularmente (a cada 90 dias recomendado)
# ====================================================================
